[{"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\index.js":"1","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\reportWebVitals.js":"2","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\App.js":"3","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Testing.jsx":"4","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Exchange.jsx":"5","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Index\\Banner.jsx":"6","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Navigation.jsx":"7","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\utils\\cleanAddress.js":"8","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Order.jsx":"9","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Footer.jsx":"10","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Landing.jsx":"11","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Login.jsx":"12","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Register.jsx":"13","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Index.jsx":"14","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\ProtectedRoute.jsx":"15","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\utils\\Context.js":"16","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Sidebar.jsx":"17","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Home.jsx":"18","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Deposit.jsx":"19","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Sell.jsx":"20","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Offers.jsx":"21","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Buy.jsx":"22","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Transaction.jsx":"23","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\sales-details.jsx":"24","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Negotiation.jsx":"25","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\CryptoSeller.jsx":"26","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Network.jsx":"27","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\IsEthereum.jsx":"28"},{"size":751,"mtime":1618060952245,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1606682522586,"results":"31","hashOfConfig":"30"},{"size":6640,"mtime":1613685607197,"results":"32","hashOfConfig":"30"},{"size":754,"mtime":1615020081651,"results":"33","hashOfConfig":"30"},{"size":2501,"mtime":1618334044710,"results":"34","hashOfConfig":"30"},{"size":433,"mtime":1614757134033,"results":"35","hashOfConfig":"30"},{"size":1402,"mtime":1618332463387,"results":"36","hashOfConfig":"30"},{"size":153,"mtime":1615021350174,"results":"37","hashOfConfig":"30"},{"size":1571,"mtime":1614782997335,"results":"38","hashOfConfig":"30"},{"size":1766,"mtime":1618061016366,"results":"39","hashOfConfig":"30"},{"size":8655,"mtime":1618064708810,"results":"40","hashOfConfig":"30"},{"size":3099,"mtime":1618303960859,"results":"41","hashOfConfig":"30"},{"size":3238,"mtime":1618312367000,"results":"42","hashOfConfig":"30"},{"size":1912,"mtime":1618333849912,"results":"43","hashOfConfig":"30"},{"size":829,"mtime":1618346577201,"results":"44","hashOfConfig":"30"},{"size":122,"mtime":1615221310445,"results":"45","hashOfConfig":"30"},{"size":1425,"mtime":1617401201210,"results":"46","hashOfConfig":"30"},{"size":684,"mtime":1618146047573,"results":"47","hashOfConfig":"30"},{"size":5818,"mtime":1618235419747,"results":"48","hashOfConfig":"30"},{"size":6532,"mtime":1618235341789,"results":"49","hashOfConfig":"30"},{"size":2832,"mtime":1618235361871,"results":"50","hashOfConfig":"30"},{"size":7633,"mtime":1618151846894,"results":"51","hashOfConfig":"30"},{"size":1624,"mtime":1615447947148,"results":"52","hashOfConfig":"30"},{"size":4246,"mtime":1618235627769,"results":"53","hashOfConfig":"30"},{"size":2812,"mtime":1618235202799,"results":"54","hashOfConfig":"30"},{"size":4944,"mtime":1618235645507,"results":"55","hashOfConfig":"30"},{"size":565,"mtime":1618258507482,"results":"56","hashOfConfig":"30"},{"size":1309,"mtime":1618346977561,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1uipdyk",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"61"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\index.js",["125"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Testing from \"./components/Testing\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      {/* <App /> */}\n      <Switch>\n        <Route path=\"/\">\n          <Testing />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["126","127"],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\reportWebVitals.js",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\App.js",["128","129","130"],"import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport contract from \"./eth/build/contracts/DappTokenSale.json\"; // sells the token\nimport erccontract from \"./eth/build/contracts/DappToken.json\"; // connects to the erc20 contract.\n\nfunction App() {\n  const ABI = contract.abi;\n  const ercABI = erccontract.abi;\n\n  let activeAccount;\n  const checkAccountChange = window.ethereum.on(\"accountsChanged\", () => {\n    console.log(\"change occurs here!\");\n  });\n\n  useEffect(() => {\n    console.log(\"triggered\");\n  }, [checkAccountChange]);\n\n  // former contract address 0x7D88AB95845cd60B2D670D75A9a4926Be6d3917b\n\n  const SaleCon = \"0x3192e7Ed865114026D462dD9ebB465B54c15Eadb\";\n  const ErcCon = \"0x0440b94a99682B558398A4FeD666884A0DCdC689\";\n  // sale contract : 0x9155c3CBB7093865A2B3f35ab6E6b0Cd4b28b7Fc\n  // erc contract : 0xAA0cE372262144aC1FaeF50E902b599c1eAC4c88\n\n  // let web3 = window.ethereum;\n  // web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\n  // console.log(\"provider : \", web3.givenProvider);\n\n  const web3 = new Web3(\n    new Web3.providers.HttpProvider(\"http://localhost:7545\")\n  );\n\n  // if (typeof web3 !== \"undefined\") {\n  //   web3 = new Web3(web3.currentProvider);\n  // } else {\n  //   console.log(\"No web3? You should consider trying MetaMask!\");\n  //   web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\n  // }\n\n  // For now, 'eth_accounts' will continue to always return an array\n  // function handleAccountsChanged(accounts) {\n  //   if (accounts.length === 0) {\n  //     // MetaMask is locked or the user has not connected any accounts\n  //     console.log('Please connect to MetaMask.');\n  //   } else if (accounts[0] !== currentAccount) {\n  //     currentAccount = accounts[0];\n  //     // Do any other work!\n  //   }\n  // }\n\n  const myContract = new web3.eth.Contract(ercABI, ErcCon);\n\n  const myWallets = () => {\n    let myWallets = web3.eth.accounts.wallet;\n    console.log(\"length : \", myWallets);\n    console.log(\"length : \", myWallets.length);\n  };\n\n  const newWallet = () => {\n    let response = web3.eth.accounts.wallet.create(1);\n    console.log(response);\n  };\n\n  const sendEther = async () => {\n    web3.eth\n      .sendTransaction({\n        from: \"0x7D88AB95845cd60B2D670D75A9a4926Be6d3917b\",\n        to: \"0x9B6cE328a888Cf7066006b62575d96B56EF170b5\",\n        value: web3.utils.toWei(\"20\"),\n      })\n      .then((ful) => {\n        console.log(ful);\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n  };\n\n  const accountBalance = async () => {\n    await myContract.methods\n      .balanceOf(\"0x9da37B4183662236888d166f4cA1A14b15CEC22d\")\n      .call()\n      .then((result) => {\n        console.log(result);\n      });\n    // let x = await web3.eth.getBalance(\n    //   \"0x8541ce0ba6fE4a59A06c036a8b720E9447916842\"\n    // );\n    // console.log(web3.utils.fromWei(x));\n  };\n\n  const [data, setData] = useState({\n    from: \"\",\n    to: \"\",\n    amt: \"\",\n  });\n\n  const updateformData = async (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    let dataClone = { ...data };\n    dataClone[name] = value;\n    setData(dataClone);\n  };\n\n  const sendERC = async (e) => {\n    e.preventDefault();\n    console.log(data.to);\n    console.log(data.amt);\n    await myContract.methods\n      .transfer(data.to, data.amt)\n      .call()\n      .then((result, error) => {\n        console.log(result);\n        console.log(error);\n      });\n  };\n\n  /**\n   *\n   * Token Sale Contract\n   */\n\n  const tokenContract = new web3.eth.Contract(ABI, SaleCon, {\n    from: \"0x67e39c04AEC63c9a2Dd581Ff75aB0E3D8C58D3E7\", // default from address\n    // gasPrice: \"20000000000\",\n    // gas: \"5000000\",\n  });\n\n  const buyTokens = async () => {\n    console.log(\"purchasing tokens\");\n    const ADDRESS = await connectMetaMask();\n    console.log(\"uUSER ADDRESS : \", ADDRESS);\n\n    let amtOfTokens = 10000;\n\n    let tPrice = await tokenContract.methods\n      .tokenPrice()\n      .call()\n      .then((price) => {\n        console.log(\"token price: \", price);\n        return price;\n      })\n      .catch((e) => console.log(e.message));\n\n    let purchase = tPrice * amtOfTokens; //calculates the eth from the frontend.\n    console.log(\"price in wei :\", purchase);\n\n    await tokenContract.methods\n      .buyTokens(amtOfTokens)\n      .send({ from: ADDRESS, value: purchase })\n      .then((result) => {\n        // tokenContract.once(\"Sell\", (err, event) => {\n        //   console.log(event);\n        // });\n        console.log(result);\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n  };\n\n  const connectMetaMask = async () => {\n    console.log(\"connecting account to metamask\");\n    let accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n\n    return accounts[0];\n  };\n\n  const payWithMetaMask = async () => {\n    console.log(\"connecting via metamask\");\n\n    let amtOfTokens = 10000;\n    let tPrice = await tokenContract.methods\n      .tokenPrice()\n      .call()\n      .then((price) => {\n        console.log(\"token price: \", price);\n        return price;\n      })\n      .catch((e) => console.log(e.message));\n\n    let purchase = tPrice * amtOfTokens;\n\n    const ADDRESS = await connectMetaMask();\n\n    await window.ethereum\n      .request({\n        method: \"eth_sendTransaction\",\n        params: [\n          {\n            from: ADDRESS,\n            to: \"0x27dAF476B7CbDbA917259B42C99dbEfa3b6FdC48\",\n            value: \"0x29a2241af62c0000\",\n            gasPrice: \"20000000000\",\n            gas: \"5000000\",\n          },\n        ],\n      })\n      .then((txHash) => console.log(txHash))\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={sendEther}>send ether!</button>\n      <button onClick={newWallet}>Create New Wallet!</button>\n      <button onClick={myWallets}>My Wallets!</button>\n      <button onClick={buyTokens}>buy tokens</button>\n      <button onClick={accountBalance}>account balance</button>\n      <button onClick={connectMetaMask}>Connect MetaMask</button>\n      <br />\n      <h3>Send ERC20 TOKEN...</h3>\n      <form onSubmit={sendERC}>\n        <input\n          placeholder=\"from account\"\n          name=\"from\"\n          onChange={updateformData}\n        />\n        <br />\n        <input\n          placeholder=\"to account\"\n          name=\"to\"\n          onChange={updateformData}\n        />{\" \"}\n        <br />\n        <input placeholder=\"Amount\" name=\"amt\" onChange={updateformData} />{\" \"}\n        <br />\n        <button>Transfer Token</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Testing.jsx",["131"],"import React, { useState } from \"react\";\r\nimport Exchange from \"./Exchange\";\r\n\r\nconst Test = () => {\r\n  // const [file, setFile] = useState(\"\");\r\n  // upload only one file.\r\n  // const uploadImg = async (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(file[0]);\r\n\r\n  //   var reader = new FileReader();\r\n\r\n  //   reader.readAsDataURL(file);\r\n  //   // if(rea)\r\n  //   reader.onload = () => {\r\n  //     var Base64 = reader.result;\r\n  //     console.log(Base64);\r\n  //     // setFileBase64String(Base64);\r\n  //   };\r\n  //   reader.onerror = (error) => {\r\n  //     console.log(\"error: \", error);\r\n  //   };\r\n  // };\r\n\r\n  /**\r\n   * route this!\r\n   * web site,\r\n   * dashboard\r\n   * admin\r\n   */\r\n\r\n  return <Exchange />;\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Exchange.jsx",["132","133","134","135","136","137"],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Index\\Banner.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Navigation.jsx",["138","139","140","141"],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\utils\\cleanAddress.js",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Order.jsx",[],["142","143"],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Footer.jsx",["144","145","146","147","148","149"],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"index_footer\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              <h3>About Us</h3>\r\n              <hr className=\"underline\" />\r\n              <p>\r\n                Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quis\r\n                aperiam aut ut repellendus nesciunt facilis, explicabo sed\r\n                doloribus sunt vitae earum voluptate inventore quas error\r\n                dolores, sit, nihil modi placeat.\r\n              </p>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <h3>Navigation</h3>\r\n              <hr className=\"underline\" />\r\n              <ul>\r\n                <li>\r\n                  <a href=\"#\">- How It Works</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">- My Account</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">- Privacy Policy</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">- Privacy Policy</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">- About Us</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">- Contact Us</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <h3>Social Media</h3>\r\n              <hr className=\"underline\" />\r\n              <ul>\r\n                <li>Facebook</li>\r\n                <li>Twitter</li>\r\n                <li>Instagram</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Landing.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Login.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Register.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Index.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\ProtectedRoute.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\utils\\Context.js",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Sidebar.jsx",["150"],"import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport {\r\n  Settings,\r\n  FileText,\r\n  Bell,\r\n  LogOut,\r\n  Activity,\r\n  ArrowDown,\r\n  ArrowUp,\r\n} from \"react-feather\";\r\nconst SideBar = () => {\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ul>\r\n        <li>\r\n          <Link to={`${url}`}>- Dashboard</Link>{\" \"}\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/deposit`}>\r\n            <ArrowDown size={16} /> Make A Deposit\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/sell`}>\r\n            <ArrowUp size={16} /> Sell Crypto\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/offers`}>\r\n            <Activity size={16} /> Buy Crypto <Bell size={8} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/purchase`}>\r\n            <Activity size={16} /> My Order History <Bell size={8} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/history`}>\r\n            <FileText size={16} /> History\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/settings`}>\r\n            <Settings size={16} /> Settings\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">\r\n            <LogOut size={16} /> Logout\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Home.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Deposit.jsx",["151"],"import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport image from \"./../../../img/wallet.svg\";\r\nimport exchangeABI from \"./../../../eth/build/contracts/Exchange.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Save, Archive, Info } from \"react-feather\";\r\nimport Network from \"../../Network\";\r\n\r\nconst Deposit = () => {\r\n  const ABI = exchangeABI.abi;\r\n  const contractAddress = process.env.REACT_APP_EX_CONTRACT;\r\n  const [deposit, setDeposit] = useState(\"0\");\r\n  const [details, setDetails] = useState({ balance: \"\", forSale: \"\" });\r\n  const [address, setAddress] = useState(window.ethereum.selectedAddress);\r\n  const [alert, setAlert] = useState(\"\");\r\n\r\n  //   change account...\r\n  const checkAccountChange = window.ethereum.on(\"accountsChanged\", (res) =>\r\n    setAddress(res[0])\r\n  );\r\n\r\n  useEffect(() => {\r\n    setAddress(checkAccountChange.selectedAddress);\r\n  }, [checkAccountChange]);\r\n  //   deposits ether to the contract for sale.\r\n\r\n  let web3 = window.ethereum;\r\n  web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\r\n\r\n  const submitDeposit = async (e) => {\r\n    e.preventDefault();\r\n    let exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n    let ether = web3.utils.toWei(deposit);\r\n    setAlert(\"Initiating Deposit. Please Wait!\");\r\n\r\n    if (ether <= 0) {\r\n      setAlert(\"Invalid Deposit Value!\");\r\n      return;\r\n    }\r\n\r\n    await exchangeContract.methods\r\n      .deposit(ether)\r\n      .send({ value: ether, from: address })\r\n      .then((tx) => {\r\n        // sent the tx to backend for sorting\r\n        axios\r\n          .post(\r\n            `${process.env.REACT_APP_URL}/transactions/save-new-tx`,\r\n            { ...tx, value: ether },\r\n            { withCredentials: true }\r\n          )\r\n          .then((res) => {\r\n            console.log(res.data);\r\n            setAlert(\"Deposit Made Successfully!\");\r\n          })\r\n          .catch((er) => {\r\n            console.log(er);\r\n            setAlert(er.message);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        console.log(err.reason);\r\n        console.log(err.message);\r\n        setAlert(err.message);\r\n      });\r\n  };\r\n\r\n  let exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n  // get the balances\r\n  useEffect(() => {\r\n    if (!address) return false;\r\n    const query = async () => {\r\n      await exchangeContract.methods\r\n        .myBalance(address)\r\n        .call({ from: address })\r\n        .then((tx) => {\r\n          setDetails({ balance: tx[0], forSale: tx[1] });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(err.reason);\r\n          console.log(err.message);\r\n        });\r\n    };\r\n    query();\r\n  }, [address]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container container_x\">\r\n        <Network />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img\r\n              src={image}\r\n              alt=\"side desc\"\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6 bg-white p-4\">\r\n            <h6>\r\n              <Archive size={13} /> Deposit Eth To Contract.{\" \"}\r\n              <span className=\"float-end\">\r\n                {address ? (\r\n                  \"MetaMask Connected\"\r\n                ) : (\r\n                  <button\r\n                    className=\"btn btn-link\"\r\n                    onClick={() => window.ethereum.enable()}\r\n                  >\r\n                    Connect Wallet\r\n                  </button>\r\n                )}\r\n              </span>\r\n            </h6>\r\n\r\n            <div className=\"alert alert-success\">\r\n              <p>\r\n                <Info size={16} /> To begin to trade your ether, you need to\r\n                send the value to our smart contract. Your ether is saved on the\r\n                blockchain, thereby making all transactions transparent.\r\n              </p>\r\n              <p>Connected Metamask Wallet Address: {address}</p>\r\n            </div>\r\n\r\n            <div className=\"alert alert-secondary text-center\">\r\n              You Currently Have {web3.utils.fromWei(details.balance)}eth\r\n              Deposited In Your Wallet.\r\n            </div>\r\n            <hr />\r\n            <form action=\"\" onSubmit={submitDeposit}>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-md-6\">\r\n                  <h5>Deposit Your Ether :</h5>\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"Enter Amount Of Ether\"\r\n                    className=\"form-control\"\r\n                    onChange={({ target }) => setDeposit(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h5>Amount In Wei. : </h5>\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder={!deposit ? \"0\" : Web3.utils.toWei(deposit)}\r\n                    className=\"form-control\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              {alert && (\r\n                <>\r\n                  <div className=\"alert alert-secondary text-center\">\r\n                    {alert}\r\n                  </div>\r\n                  <hr />\r\n                </>\r\n              )}\r\n              <button className=\"btn btn-primary btn-xs\">\r\n                {\" \"}\r\n                <Save size={12} /> Deposit.\r\n              </button>\r\n              <Link to=\"/dashboard/sell\" className=\"float-end\">\r\n                Got Eth? Put it up for sale\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Deposit;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Sell.jsx",["152"],"import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport exchangeABI from \"./../../../eth/build/contracts/Exchange.json\";\r\nimport image from \"./../../../img/coins.svg\";\r\nimport axios from \"axios\";\r\nimport { Archive } from \"react-feather\";\r\nimport Network from \"../../Network\";\r\n\r\nconst Sell = () => {\r\n  let web3 = window.ethereum;\r\n  web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\r\n  const ABI = exchangeABI.abi;\r\n  const contractAddress = process.env.REACT_APP_EX_CONTRACT;\r\n  const [address, setAddress] = useState(\"\");\r\n  const [details, setDetails] = useState({ balance: \"\", forSale: \"\" });\r\n\r\n  // form values\r\n  const [forSale, setSale] = useState(\"0\"); // amt from Wei.\r\n  const [minPurchase, setMinPurchase] = useState(\"\"); // set min purchase of eth\r\n  const [fiatValue, setFiat] = useState(\"\"); // fiat value\r\n  const [info, setInfo] = useState(\"\"); // user description\r\n\r\n  const exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n  //   change account...\r\n  const checkAccountChange = window.ethereum.on(\"accountsChanged\", (res) =>\r\n    setAddress(res[0])\r\n  );\r\n\r\n  useEffect(() => {\r\n    setAddress(checkAccountChange.selectedAddress);\r\n  }, [checkAccountChange]);\r\n  //   deposits ether to the conttract for sale.\r\n\r\n  const putUpForSale = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let ether = web3.utils.toWei(forSale);\r\n\r\n    await exchangeContract.methods\r\n      .forSale(ether)\r\n      .send({ from: address, value: ether })\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        const saveRecord = await axios.post(\r\n          `${process.env.REACT_APP_URL}/sales/newsalesdeposit`,\r\n          {\r\n            forSale: ether,\r\n            minPurchase: web3.utils.toWei(minPurchase),\r\n            fiatValue,\r\n            info,\r\n            address,\r\n            transid: tx.transactionHash,\r\n          },\r\n          { withCredentials: true }\r\n        );\r\n        console.log(saveRecord);\r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n        console.log(er.reason);\r\n        console.log(er.message);\r\n      });\r\n  };\r\n\r\n  // get the balances\r\n  useEffect(() => {\r\n    if (!address) return false;\r\n    const query = async () => {\r\n      await exchangeContract.methods\r\n        .myBalance(address)\r\n        .call({ from: address })\r\n        .then((tx) => {\r\n          setDetails({ balance: tx[0], forSale: tx[1] });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(err.reason);\r\n          console.log(err.message);\r\n        });\r\n    };\r\n    query();\r\n  }, [address]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container container_x\">\r\n        <Network />\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={image} alt=\"side desc\" style={{ width: \"100%\" }} />\r\n          </div>\r\n          <div className=\"col-md-6  bg-white p-4\">\r\n            <div className=\"alert alert-success text-center\">\r\n              Connected Address : {address}\r\n            </div>\r\n            <div className=\"alert alert-secondary text-center\">\r\n              You Currently Have {web3.utils.fromWei(details.forSale)} eth For\r\n              Sale\r\n            </div>{\" \"}\r\n            <hr />\r\n            <h6>\r\n              <Archive size={13} /> Sell From Deposit Ether.{\" \"}\r\n              <span className=\"float-end\">\r\n                {address ? (\r\n                  \"MetaMask Connected\"\r\n                ) : (\r\n                  <button\r\n                    className=\"btn btn-link\"\r\n                    onClick={() => window.ethereum.enable()}\r\n                  >\r\n                    Connect Wallet\r\n                  </button>\r\n                )}\r\n              </span>\r\n            </h6>\r\n            <form action=\"\" onSubmit={putUpForSale}>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"sell_field\">\r\n                    Put Up Some Ether For Sale.\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"sell_field\"\r\n                    placeholder=\"Enter Amount For Sale...\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    onChange={({ target }) => setSale(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"sell_field\">Amount In Wei.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"sell_field\"\r\n                    placeholder={!forSale ? \"0\" : Web3.utils.toWei(forSale)}\r\n                    className=\"form-control\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"\">Min. Purchase Of Eth At Once</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Min. Purchase At Once\"\r\n                    value={minPurchase}\r\n                    onChange={({ target }) => setMinPurchase(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"\">Amount In Naira/Eth </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"e.g. 3400000\"\r\n                    value={fiatValue}\r\n                    onChange={({ target }) => setFiat(target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"desc\">Descripe Your Terms Of Sale:</label>\r\n                <textarea\r\n                  name=\"\"\r\n                  id=\"desc\"\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Type Message Here ...\"\r\n                  value={info}\r\n                  onChange={({ target }) => setInfo(target.value)}\r\n                ></textarea>\r\n              </div>\r\n              <hr />\r\n              <button className=\"btn btn-success btn-xs\">\r\n                Sell {forSale} Ether\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sell;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Offers.jsx",["153"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Web3 from \"web3\";\r\nimport { cleanAddress } from \"./../../../utils/cleanAddress\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { BookOpen } from \"react-feather\";\r\nimport Network from \"./../../Network\";\r\n\r\nconst Offers = () => {\r\n  let { path } = useRouteMatch();\r\n\r\n  const [sales, setSales] = useState({ status: true, data: [] });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const pull = async () => {\r\n      const apiResponse = await axios.get(\r\n        `${process.env.REACT_APP_URL}/sales/get-available-sales`,\r\n        { withCredentials: true }\r\n      );\r\n\r\n      setSales({ status: false, data: apiResponse.data[0] });\r\n      setLoading(false);\r\n    };\r\n    pull();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container table-responsive container_x\">\r\n      <Network />\r\n      <div className=\"row\">\r\n        {/* justify-content-md-center */}\r\n        <div className=\"col-md-4\"></div>\r\n        <div className=\"col-md-8\">\r\n          <h5 className=\"text-center\">\r\n            {\" \"}\r\n            <BookOpen size={23} /> Sales Ledger.\r\n          </h5>\r\n          {loading ? (\r\n            \"Fetching Available trades\"\r\n          ) : sales.data.length === 0 ? (\r\n            <h4 className=\"text-center\">\r\n              \"There are no available trades at the moment... Be the first...\"\r\n            </h4>\r\n          ) : (\r\n            <table className=\"table table-hover table-striped table-sm  text-center\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th scope=\"col\">Username</th>\r\n                  <th scope=\"col\">Address</th>\r\n                  <th scope=\"col\">Amount</th>\r\n                  <th scope=\"col\">Min. Purchase</th>\r\n                  <th scope=\"col\">Rate</th>\r\n                  <th scope=\"col\">TimeStamp</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {sales.data.map((sale) => (\r\n                  <tr key={sale.address}>\r\n                    <td>{sale.username}</td>\r\n                    <td>0x0...{cleanAddress(sale.address)}</td>\r\n                    <td>{Web3.utils.fromWei(sale.balance)}eth</td>\r\n                    <td>{Web3.utils.fromWei(sale.minpurchase)}eth</td>\r\n                    <td>{sale.rate}</td>\r\n                    <td>{sale.updated}</td>\r\n                    <td>\r\n                      <Link to={`/dashboard/sale-details/${sale.salesid}`}>\r\n                        View & Buy\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Offers;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Buy.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Transaction.jsx",["154"],"import React from \"react\";\r\nimport {\r\n  MessageSquare,\r\n  ArrowRightCircle,\r\n  ArrowDownCircle,\r\n} from \"react-feather\";\r\n\r\nconst Transaction = () => {\r\n  return (\r\n    <div className=\"container container_x\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <p className=\"text-center buyIcon\">0x...8d8df9d</p>\r\n          <p className=\"text-center buyIcon\">\r\n            <ArrowDownCircle size={29} />\r\n          </p>\r\n          <p className=\"text-center buyIcon\">0x...8d8df9d</p>\r\n          <p className=\"text-center buyIcon\">Locked Value : 0.034 eth</p>\r\n          <p className=\"text-center\">\r\n            <button className=\"btn btn-warning btn-sm\">Release Value!</button>\r\n          </p>\r\n          <div className=\"alert alert-secondary\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam\r\n            eius sed assumenda molestiae fuga quasi accusantium alias\r\n            voluptatem, repellendus illo cupiditate iste molestias distinctio\r\n            commodi ut? Magni in beatae sapiente.\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <label htmlFor=\"\">\r\n            <MessageSquare size={15} /> Chat\r\n          </label>\r\n          <div className=\"chat_area\"></div>\r\n          <textarea\r\n            placeholder=\"Drop A Message!\"\r\n            className=\"form-control\"\r\n            name=\"\"\r\n            rows=\"4\"\r\n          ></textarea>\r\n          <hr />\r\n          <button className=\"btn btn-sm btn-primary\">Send Message</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\sales-details.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Negotiation.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\CryptoSeller.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Network.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\IsEthereum.jsx",[],{"ruleId":"155","severity":1,"message":"156","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":11},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"155","severity":1,"message":"163","line":11,"column":7,"nodeType":"157","messageId":"158","endLine":11,"endColumn":20},{"ruleId":"155","severity":1,"message":"164","line":175,"column":9,"nodeType":"157","messageId":"158","endLine":175,"endColumn":24},{"ruleId":"155","severity":1,"message":"165","line":188,"column":9,"nodeType":"157","messageId":"158","endLine":188,"endColumn":17},{"ruleId":"155","severity":1,"message":"166","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"166","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"167","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"168","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":12},{"ruleId":"155","severity":1,"message":"169","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":19},{"ruleId":"155","severity":1,"message":"170","line":16,"column":7,"nodeType":"157","messageId":"158","endLine":16,"endColumn":11},{"ruleId":"155","severity":1,"message":"171","line":19,"column":11,"nodeType":"157","messageId":"158","endLine":19,"endColumn":29},{"ruleId":"155","severity":1,"message":"167","line":1,"column":27,"nodeType":"157","messageId":"158","endLine":1,"endColumn":36},{"ruleId":"155","severity":1,"message":"168","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":12},{"ruleId":"155","severity":1,"message":"172","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":16},{"ruleId":"155","severity":1,"message":"173","line":5,"column":10,"nodeType":"157","messageId":"158","endLine":5,"endColumn":22},{"ruleId":"159","replacedBy":"174"},{"ruleId":"161","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":24,"column":19,"nodeType":"178","endLine":24,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":27,"column":19,"nodeType":"178","endLine":27,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":30,"column":19,"nodeType":"178","endLine":30,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":33,"column":19,"nodeType":"178","endLine":33,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":36,"column":19,"nodeType":"178","endLine":36,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":39,"column":19,"nodeType":"178","endLine":39,"endColumn":31},{"ruleId":"176","severity":1,"message":"177","line":51,"column":11,"nodeType":"178","endLine":51,"endColumn":23},{"ruleId":"179","severity":1,"message":"180","line":88,"column":6,"nodeType":"181","endLine":88,"endColumn":15,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"180","line":82,"column":6,"nodeType":"181","endLine":82,"endColumn":15,"suggestions":"183"},{"ruleId":"155","severity":1,"message":"184","line":10,"column":9,"nodeType":"157","messageId":"158","endLine":10,"endColumn":13},{"ruleId":"155","severity":1,"message":"185","line":4,"column":3,"nodeType":"157","messageId":"158","endLine":4,"endColumn":19},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["186"],"no-negated-in-lhs",["187"],"'activeAccount' is defined but never used.","'payWithMetaMask' is assigned a value but never used.","'purchase' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Web3' is defined but never used.","'exchangeABI' is defined but never used.","'web3' is assigned a value but never used.","'checkAccountChange' is assigned a value but never used.","'metalogo' is defined but never used.","'cleanAddress' is defined but never used.",["186"],["187"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'exchangeContract.methods'. Either include it or remove the dependency array.","ArrayExpression",["188"],["189"],"'path' is assigned a value but never used.","'ArrowRightCircle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},"Update the dependencies array to be: [address, exchangeContract.methods]",{"range":"193","text":"194"},{"range":"195","text":"194"},[2775,2784],"[address, exchangeContract.methods]",[2601,2610]]