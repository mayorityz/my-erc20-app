[{"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\index.js":"1","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\reportWebVitals.js":"2","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\App.js":"3","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Testing.jsx":"4","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Exchange.jsx":"5","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Index\\Banner.jsx":"6","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Navigation.jsx":"7","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\utils\\cleanAddress.js":"8","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Order.jsx":"9","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Footer.jsx":"10","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Landing.jsx":"11","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Login.jsx":"12","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Register.jsx":"13","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Index.jsx":"14","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\ProtectedRoute.jsx":"15","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\utils\\Context.js":"16","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Sidebar.jsx":"17","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Home.jsx":"18","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Deposit.jsx":"19","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Sell.jsx":"20","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Offers.jsx":"21","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Buy.jsx":"22","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Transaction.jsx":"23","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\sales-details.jsx":"24"},{"size":751,"mtime":1615021984981,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1606682522586,"results":"27","hashOfConfig":"26"},{"size":6640,"mtime":1613685607197,"results":"28","hashOfConfig":"26"},{"size":754,"mtime":1615020081651,"results":"29","hashOfConfig":"26"},{"size":5201,"mtime":1615366188763,"results":"30","hashOfConfig":"26"},{"size":433,"mtime":1614757134033,"results":"31","hashOfConfig":"26"},{"size":1796,"mtime":1616069708649,"results":"32","hashOfConfig":"26"},{"size":153,"mtime":1615021350174,"results":"33","hashOfConfig":"26"},{"size":1571,"mtime":1614782997335,"results":"34","hashOfConfig":"26"},{"size":992,"mtime":1615022471133,"results":"35","hashOfConfig":"26"},{"size":6653,"mtime":1615021804877,"results":"36","hashOfConfig":"26"},{"size":3223,"mtime":1615898102004,"results":"37","hashOfConfig":"26"},{"size":2879,"mtime":1615071625182,"results":"38","hashOfConfig":"26"},{"size":1569,"mtime":1617114026489,"results":"39","hashOfConfig":"26"},{"size":298,"mtime":1615221072325,"results":"40","hashOfConfig":"26"},{"size":122,"mtime":1615221310445,"results":"41","hashOfConfig":"26"},{"size":1415,"mtime":1617114464988,"results":"42","hashOfConfig":"26"},{"size":3258,"mtime":1615323343845,"results":"43","hashOfConfig":"26"},{"size":4435,"mtime":1616844529669,"results":"44","hashOfConfig":"26"},{"size":5763,"mtime":1616947451693,"results":"45","hashOfConfig":"26"},{"size":2332,"mtime":1617114259530,"results":"46","hashOfConfig":"26"},{"size":1732,"mtime":1615448209192,"results":"47","hashOfConfig":"26"},{"size":1624,"mtime":1615447947148,"results":"48","hashOfConfig":"26"},{"size":4348,"mtime":1617263656383,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"1uipdyk",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"53"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"53"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"53"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\index.js",["111"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Testing from \"./components/Testing\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      {/* <App /> */}\n      <Switch>\n        <Route path=\"/\">\n          <Testing />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["112","113"],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\reportWebVitals.js",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\App.js",["114","115","116"],"import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\nimport contract from \"./eth/build/contracts/DappTokenSale.json\"; // sells the token\nimport erccontract from \"./eth/build/contracts/DappToken.json\"; // connects to the erc20 contract.\n\nfunction App() {\n  const ABI = contract.abi;\n  const ercABI = erccontract.abi;\n\n  let activeAccount;\n  const checkAccountChange = window.ethereum.on(\"accountsChanged\", () => {\n    console.log(\"change occurs here!\");\n  });\n\n  useEffect(() => {\n    console.log(\"triggered\");\n  }, [checkAccountChange]);\n\n  // former contract address 0x7D88AB95845cd60B2D670D75A9a4926Be6d3917b\n\n  const SaleCon = \"0x3192e7Ed865114026D462dD9ebB465B54c15Eadb\";\n  const ErcCon = \"0x0440b94a99682B558398A4FeD666884A0DCdC689\";\n  // sale contract : 0x9155c3CBB7093865A2B3f35ab6E6b0Cd4b28b7Fc\n  // erc contract : 0xAA0cE372262144aC1FaeF50E902b599c1eAC4c88\n\n  // let web3 = window.ethereum;\n  // web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\n  // console.log(\"provider : \", web3.givenProvider);\n\n  const web3 = new Web3(\n    new Web3.providers.HttpProvider(\"http://localhost:7545\")\n  );\n\n  // if (typeof web3 !== \"undefined\") {\n  //   web3 = new Web3(web3.currentProvider);\n  // } else {\n  //   console.log(\"No web3? You should consider trying MetaMask!\");\n  //   web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:7545\"));\n  // }\n\n  // For now, 'eth_accounts' will continue to always return an array\n  // function handleAccountsChanged(accounts) {\n  //   if (accounts.length === 0) {\n  //     // MetaMask is locked or the user has not connected any accounts\n  //     console.log('Please connect to MetaMask.');\n  //   } else if (accounts[0] !== currentAccount) {\n  //     currentAccount = accounts[0];\n  //     // Do any other work!\n  //   }\n  // }\n\n  const myContract = new web3.eth.Contract(ercABI, ErcCon);\n\n  const myWallets = () => {\n    let myWallets = web3.eth.accounts.wallet;\n    console.log(\"length : \", myWallets);\n    console.log(\"length : \", myWallets.length);\n  };\n\n  const newWallet = () => {\n    let response = web3.eth.accounts.wallet.create(1);\n    console.log(response);\n  };\n\n  const sendEther = async () => {\n    web3.eth\n      .sendTransaction({\n        from: \"0x7D88AB95845cd60B2D670D75A9a4926Be6d3917b\",\n        to: \"0x9B6cE328a888Cf7066006b62575d96B56EF170b5\",\n        value: web3.utils.toWei(\"20\"),\n      })\n      .then((ful) => {\n        console.log(ful);\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n  };\n\n  const accountBalance = async () => {\n    await myContract.methods\n      .balanceOf(\"0x9da37B4183662236888d166f4cA1A14b15CEC22d\")\n      .call()\n      .then((result) => {\n        console.log(result);\n      });\n    // let x = await web3.eth.getBalance(\n    //   \"0x8541ce0ba6fE4a59A06c036a8b720E9447916842\"\n    // );\n    // console.log(web3.utils.fromWei(x));\n  };\n\n  const [data, setData] = useState({\n    from: \"\",\n    to: \"\",\n    amt: \"\",\n  });\n\n  const updateformData = async (e) => {\n    let name = e.target.name;\n    let value = e.target.value;\n\n    let dataClone = { ...data };\n    dataClone[name] = value;\n    setData(dataClone);\n  };\n\n  const sendERC = async (e) => {\n    e.preventDefault();\n    console.log(data.to);\n    console.log(data.amt);\n    await myContract.methods\n      .transfer(data.to, data.amt)\n      .call()\n      .then((result, error) => {\n        console.log(result);\n        console.log(error);\n      });\n  };\n\n  /**\n   *\n   * Token Sale Contract\n   */\n\n  const tokenContract = new web3.eth.Contract(ABI, SaleCon, {\n    from: \"0x67e39c04AEC63c9a2Dd581Ff75aB0E3D8C58D3E7\", // default from address\n    // gasPrice: \"20000000000\",\n    // gas: \"5000000\",\n  });\n\n  const buyTokens = async () => {\n    console.log(\"purchasing tokens\");\n    const ADDRESS = await connectMetaMask();\n    console.log(\"uUSER ADDRESS : \", ADDRESS);\n\n    let amtOfTokens = 10000;\n\n    let tPrice = await tokenContract.methods\n      .tokenPrice()\n      .call()\n      .then((price) => {\n        console.log(\"token price: \", price);\n        return price;\n      })\n      .catch((e) => console.log(e.message));\n\n    let purchase = tPrice * amtOfTokens; //calculates the eth from the frontend.\n    console.log(\"price in wei :\", purchase);\n\n    await tokenContract.methods\n      .buyTokens(amtOfTokens)\n      .send({ from: ADDRESS, value: purchase })\n      .then((result) => {\n        // tokenContract.once(\"Sell\", (err, event) => {\n        //   console.log(event);\n        // });\n        console.log(result);\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n  };\n\n  const connectMetaMask = async () => {\n    console.log(\"connecting account to metamask\");\n    let accounts = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n\n    return accounts[0];\n  };\n\n  const payWithMetaMask = async () => {\n    console.log(\"connecting via metamask\");\n\n    let amtOfTokens = 10000;\n    let tPrice = await tokenContract.methods\n      .tokenPrice()\n      .call()\n      .then((price) => {\n        console.log(\"token price: \", price);\n        return price;\n      })\n      .catch((e) => console.log(e.message));\n\n    let purchase = tPrice * amtOfTokens;\n\n    const ADDRESS = await connectMetaMask();\n\n    await window.ethereum\n      .request({\n        method: \"eth_sendTransaction\",\n        params: [\n          {\n            from: ADDRESS,\n            to: \"0x27dAF476B7CbDbA917259B42C99dbEfa3b6FdC48\",\n            value: \"0x29a2241af62c0000\",\n            gasPrice: \"20000000000\",\n            gas: \"5000000\",\n          },\n        ],\n      })\n      .then((txHash) => console.log(txHash))\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={sendEther}>send ether!</button>\n      <button onClick={newWallet}>Create New Wallet!</button>\n      <button onClick={myWallets}>My Wallets!</button>\n      <button onClick={buyTokens}>buy tokens</button>\n      <button onClick={accountBalance}>account balance</button>\n      <button onClick={connectMetaMask}>Connect MetaMask</button>\n      <br />\n      <h3>Send ERC20 TOKEN...</h3>\n      <form onSubmit={sendERC}>\n        <input\n          placeholder=\"from account\"\n          name=\"from\"\n          onChange={updateformData}\n        />\n        <br />\n        <input\n          placeholder=\"to account\"\n          name=\"to\"\n          onChange={updateformData}\n        />{\" \"}\n        <br />\n        <input placeholder=\"Amount\" name=\"amt\" onChange={updateformData} />{\" \"}\n        <br />\n        <button>Transfer Token</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Testing.jsx",["117"],"import React, { useState } from \"react\";\r\nimport Exchange from \"./Exchange\";\r\n\r\nconst Test = () => {\r\n  // const [file, setFile] = useState(\"\");\r\n  // upload only one file.\r\n  // const uploadImg = async (e) => {\r\n  //   e.preventDefault();\r\n  //   console.log(file[0]);\r\n\r\n  //   var reader = new FileReader();\r\n\r\n  //   reader.readAsDataURL(file);\r\n  //   // if(rea)\r\n  //   reader.onload = () => {\r\n  //     var Base64 = reader.result;\r\n  //     console.log(Base64);\r\n  //     // setFileBase64String(Base64);\r\n  //   };\r\n  //   reader.onerror = (error) => {\r\n  //     console.log(\"error: \", error);\r\n  //   };\r\n  // };\r\n\r\n  /**\r\n   * route this!\r\n   * web site,\r\n   * dashboard\r\n   * admin\r\n   */\r\n\r\n  return <Exchange />;\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Exchange.jsx",["118","119","120","121","122","123"],"import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport exchangeABI from \"../eth/build/contracts/Exchange.json\";\r\nimport Navigation from \"./Navigation\";\r\nimport Footer from \"./Website/Footer\";\r\n\r\nimport \"./css/Navigation.css\";\r\nimport LandingPage from \"./Website/Landing\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Login from \"./Website/Login\";\r\nimport Register from \"./Website/Register\";\r\nimport Index from \"./dashboard/Index\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\n\r\nconst Exchange = () => {\r\n  const ABI = exchangeABI.abi;\r\n  const contractAddress = \"0x29412FCD1d55D195c38ecf379c936Ff40c76bD16\";\r\n\r\n  const [address, setAddress] = useState(\"\");\r\n  const [deposit, setDeposit] = useState(\"\");\r\n  const [forSale, setSale] = useState(\"\");\r\n\r\n  const [purchaseAdd, setPurchase] = useState(\"\");\r\n  const [purchaseValue, setPurchaseValue] = useState(\"\");\r\n\r\n  let web3 = window.ethereum;\r\n  web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\r\n\r\n  //   change account...\r\n  const checkAccountChange = window.ethereum.on(\"accountsChanged\", (res) =>\r\n    setAddress(res[0])\r\n  );\r\n\r\n  //   connect metamask\r\n  const connectMetaMask = async () => {\r\n    let accounts = await window.ethereum.request({\r\n      method: \"eth_requestAccounts\",\r\n    });\r\n    return accounts[0];\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAddress(checkAccountChange.selectedAddress);\r\n  }, [checkAccountChange]);\r\n\r\n  //   deposits ether to the conttract for sale.\r\n  const submitDeposit = async (e) => {\r\n    e.preventDefault();\r\n    let exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n    let ether = web3.utils.toWei(deposit);\r\n\r\n    await exchangeContract.methods\r\n      .deposit(ether)\r\n      .send({ value: ether, from: address })\r\n      .then((tx) => {\r\n        console.log(tx);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        console.log(err.reason);\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  const putUpForSale = async (e) => {\r\n    e.preventDefault();\r\n    let exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n    let ether = web3.utils.toWei(forSale);\r\n    console.log(forSale);\r\n    console.log(ether);\r\n\r\n    await exchangeContract.methods\r\n      .forSale(ether)\r\n      .send({ from: address, value: 0 })\r\n      .then((tx) => {\r\n        console.log(tx);\r\n        // exchangeContract.event.Sale(\"sale\", (err, res) => {\r\n        //   console.log(err);\r\n        //   console.log(res);\r\n        // });\r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n        console.log(er.reason);\r\n        console.log(er.message);\r\n      });\r\n  };\r\n\r\n  const buyEth = async (e) => {\r\n    e.preventDefault();\r\n    // !check isAddress with web3js\r\n\r\n    let exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n    let ether = web3.utils.toWei(purchaseValue);\r\n\r\n    await exchangeContract.methods\r\n      .buy(purchaseAdd)\r\n      .send({ from: address, value: ether })\r\n      .then((tx) => {\r\n        console.log(tx);\r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n        console.log(er.reason);\r\n        console.log(er.message);\r\n      });\r\n  };\r\n\r\n  const releaseValue = async (e) => {\r\n    let exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n    await exchangeContract.methods\r\n      .release(\"0x4960f29901439cBC368d6080E2C63865511cEeed\")\r\n      .send({ from: address, value: 0 })\r\n      .then((tx) => {\r\n        console.log(tx);\r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <Switch>\r\n        <Route path=\"/dashboard\">\r\n          <Index />\r\n        </Route>\r\n        <Route path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          <Register />\r\n        </Route>\r\n        {/* <ProtectedRoute exact to=\"/dashboard\" component={Index} /> */}\r\n\r\n        <Route path=\"/contactus\">\r\n          <h4>contact us</h4>\r\n        </Route>\r\n        <Route path=\"/how-it-works\">\r\n          <h4>how it works.</h4>\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <LandingPage />\r\n        </Route>\r\n\r\n        {/* <ProtectedRoute to=\"/dashboard\">\r\n          <Index />\r\n        </ProtectedRoute> */}\r\n      </Switch>\r\n\r\n      {/* exchange demo */}\r\n      <div style={{ width: \"20%\" }}>\r\n        <hr />\r\n        <h3>Buy From!</h3>\r\n        <form action=\"\" onSubmit={buyEth}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Seller Account\"\r\n            onChange={({ target }) => {\r\n              setPurchase(target.value);\r\n            }}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Amount\"\r\n            onChange={({ target }) => setPurchaseValue(target.value)}\r\n          />\r\n          <br />\r\n          <button className=\"btn btn-warning btn-xs\">Buy Eth!</button>\r\n        </form>\r\n      </div>\r\n\r\n      <button className=\"btn btn-success btn-xs\" onClick={releaseValue}>\r\n        release ether\r\n      </button>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchange;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Index\\Banner.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Navigation.jsx",["124","125","126"],"import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport \"./css/Navigation.css\";\r\nimport metalogo from \"../img/metamask.svg\";\r\nimport { cleanAddress } from \"./../utils/cleanAddress\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\n\r\nconst Navigation = () => {\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  let web3 = window.ethereum;\r\n  web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\r\n\r\n  //  change account\r\n  const checkAccountChange = window.ethereum.on(\"accountsChanged\", (res) =>\r\n    setAddress(res[0])\r\n  );\r\n\r\n  //  update the account state\r\n  useEffect(() => {\r\n    if (!address) return false;\r\n    setAddress(checkAccountChange.selectedAddress);\r\n  }, [address, checkAccountChange]);\r\n\r\n  return (\r\n    <nav class=\"navbar navbar-dark bg-dark navigation\">\r\n      <a class=\"navbar-brand\" href=\"0#\">\r\n        Logo here!{\" \"}\r\n        <span className=\"nav_address\">0x...{cleanAddress(address)}</span>\r\n      </a>\r\n\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item active\">\r\n          <Link class=\"nav-link\" to=\"/#\">\r\n            <img src={metalogo} className=\"metalogo\" alt=\"logo\" />{\" \"}\r\n            {address === \"Connect MetaMask\" ? (\r\n              <span>{address}</span>\r\n            ) : (\r\n              <span className=\"nav_address\">\r\n                Connected as : 0x0...{cleanAddress(address)}\r\n              </span>\r\n            )}\r\n          </Link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <Link class=\"nav-link\" to=\"/login\">\r\n            My Account\r\n          </Link>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <Link class=\"nav-link\" to=\"/dashboard\">\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\utils\\cleanAddress.js",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Order.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Footer.jsx",["127","128","129","130"],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <div className=\"index_footer\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\"></div>\r\n            <div className=\"col-md-4\">\r\n              <ul>\r\n                <li>\r\n                  <a href=\"#\">How It Works</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">My Account</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">About Us</a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"#\">Contact Us</a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <ul>\r\n                <li>Facebook</li>\r\n                <li>Twitter</li>\r\n                <li>Instagram</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Landing.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Login.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\Website\\Register.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Index.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\ProtectedRoute.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\utils\\Context.js",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\Sidebar.jsx",["131"],"import React from \"react\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport {\r\n  Settings,\r\n  FileText,\r\n  Bell,\r\n  LogOut,\r\n  Activity,\r\n  ArrowDown,\r\n  ArrowUp,\r\n} from \"react-feather\";\r\nconst SideBar = () => {\r\n  let { url } = useRouteMatch();\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <ul>\r\n        <li>\r\n          <Link to={`${url}`}>- Dashboard</Link>{\" \"}\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/deposit`}>\r\n            <ArrowDown size={16} /> Make A Deposit\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/sell`}>\r\n            <ArrowUp size={16} /> Sell{\" \"}\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/offers`}>\r\n            <Activity size={16} /> Offers <Bell size={8} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/purchase`}>\r\n            <Activity size={16} /> Transactions <Bell size={8} />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/history`}>\r\n            <FileText size={16} /> History\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/settings`}>\r\n            <Settings size={16} /> Settings\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">\r\n            <LogOut size={16} /> Logout\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Home.jsx",[],"C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Deposit.jsx",["132"],"import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport image from \"./../../../img/wallet.svg\";\r\nimport exchangeABI from \"./../../../eth/build/contracts/Exchange.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Deposit = () => {\r\n  const ABI = exchangeABI.abi;\r\n  const contractAddress = \"0x756e5e118DFd1D7D3aC951E52339820F7591B30D\";\r\n  const [deposit, setDeposit] = useState(\"0\");\r\n  const [details, setDetails] = useState({ balance: \"\", forSale: \"\" });\r\n  const [address, setAddress] = useState(\"\");\r\n\r\n  //   change account...\r\n  const checkAccountChange = window.ethereum.on(\"accountsChanged\", (res) =>\r\n    setAddress(res[0])\r\n  );\r\n\r\n  useEffect(() => {\r\n    setAddress(checkAccountChange.selectedAddress);\r\n  }, [checkAccountChange]);\r\n  //   deposits ether to the contract for sale.\r\n\r\n  let web3 = window.ethereum;\r\n  web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\r\n\r\n  const submitDeposit = async (e) => {\r\n    e.preventDefault();\r\n    let exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n    let ether = web3.utils.toWei(deposit);\r\n\r\n    await exchangeContract.methods\r\n      .deposit(ether)\r\n      .send({ value: ether, from: address })\r\n      .then((tx) => {\r\n        // sent the tx to backend for sorting\r\n        axios\r\n          .post(\r\n            \"http://localhost:4444/transactions/save-new-tx\",\r\n            { ...tx, value: ether },\r\n            { withCredentials: true }\r\n          )\r\n          .then((res) => {\r\n            console.log(res.data);\r\n          })\r\n          .catch((er) => {\r\n            console.log(er);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        console.log(err.reason);\r\n        console.log(err.message);\r\n      });\r\n  };\r\n\r\n  let exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n  // get the balances\r\n  useEffect(() => {\r\n    if (!address) return false;\r\n    const query = async () => {\r\n      await exchangeContract.methods\r\n        .myBalance(address)\r\n        .call({ from: address })\r\n        .then((tx) => {\r\n          setDetails({ balance: tx[0], forSale: tx[1] });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(err.reason);\r\n          console.log(err.message);\r\n        });\r\n    };\r\n    query();\r\n  }, [address]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container container_x\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img\r\n              src={image}\r\n              alt=\"side desc\"\r\n              style={{ width: \"100%\", height: \"100%\" }}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"alert alert-success\">\r\n              <p>\r\n                To begin to trade your ethereum, you need to send the value to\r\n                our smart contract. Your ethereum is saved on the blockchain,\r\n                thereby making the transaction transparent.\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"alert alert-secondary\">\r\n              You Currently Have {web3.utils.fromWei(details.balance)}eth\r\n              Deposited In Your Wallet.\r\n            </div>\r\n            <hr />\r\n            <form action=\"\" onSubmit={submitDeposit}>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-md-6\">\r\n                  <h5>Deposit Your Ether :</h5>\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"Enter Amount Of Ether\"\r\n                    className=\"form-control\"\r\n                    onChange={({ target }) => setDeposit(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <h5>Amount In Wei. : </h5>\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder={!deposit ? \"0\" : Web3.utils.toWei(deposit)}\r\n                    className=\"form-control\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <button className=\"btn btn-primary btn-xs\">Deposit.</button>\r\n              <Link to=\"#\" className=\"float-end\">\r\n                Got Eth? Put it up for sale\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Deposit;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Sell.jsx",["133"],"import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport exchangeABI from \"./../../../eth/build/contracts/Exchange.json\";\r\nimport image from \"./../../../img/coins.svg\";\r\nimport axios from \"axios\";\r\n\r\nconst Sell = () => {\r\n  let web3 = window.ethereum;\r\n  web3 = new Web3(Web3.givenProvider || \"http://127.0.0.1:7545\");\r\n  const ABI = exchangeABI.abi;\r\n  const contractAddress = \"0x756e5e118DFd1D7D3aC951E52339820F7591B30D\";\r\n  const [address, setAddress] = useState(\"\");\r\n  const [details, setDetails] = useState({ balance: \"\", forSale: \"\" });\r\n\r\n  // form values\r\n  const [forSale, setSale] = useState(\"0\"); // amt from Wei.\r\n  const [minPurchase, setMinPurchase] = useState(\"\"); // set min purchase of eth\r\n  const [fiatValue, setFiat] = useState(\"\"); // fiat value\r\n  const [info, setInfo] = useState(\"\"); // user description\r\n\r\n  const exchangeContract = new web3.eth.Contract(ABI, contractAddress);\r\n  //   change account...\r\n  const checkAccountChange = window.ethereum.on(\"accountsChanged\", (res) =>\r\n    setAddress(res[0])\r\n  );\r\n\r\n  useEffect(() => {\r\n    setAddress(checkAccountChange.selectedAddress);\r\n  }, [checkAccountChange]);\r\n  //   deposits ether to the conttract for sale.\r\n\r\n  const putUpForSale = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let ether = web3.utils.toWei(forSale);\r\n\r\n    await exchangeContract.methods\r\n      .forSale(ether)\r\n      .send({ from: address, value: ether })\r\n      .then(async (tx) => {\r\n        console.log(tx);\r\n        const saveRecord = await axios.post(\r\n          \"http://localhost:4444/sales/newsalesdeposit\",\r\n          {\r\n            forSale: ether,\r\n            minPurchase: web3.utils.toWei(minPurchase),\r\n            fiatValue,\r\n            info,\r\n            address,\r\n            transid: tx.transactionHash,\r\n          },\r\n          { withCredentials: true }\r\n        );\r\n        console.log(saveRecord);\r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n        console.log(er.reason);\r\n        console.log(er.message);\r\n      });\r\n  };\r\n\r\n  // get the balances\r\n  useEffect(() => {\r\n    if (!address) return false;\r\n    const query = async () => {\r\n      await exchangeContract.methods\r\n        .myBalance(address)\r\n        .call({ from: address })\r\n        .then((tx) => {\r\n          setDetails({ balance: tx[0], forSale: tx[1] });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          console.log(err.reason);\r\n          console.log(err.message);\r\n        });\r\n    };\r\n    query();\r\n  }, [address]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container container_x\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src={image} alt=\"side desc\" style={{ width: \"100%\" }} />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"alert alert-secondary text-center\">\r\n              You Currently Have {web3.utils.fromWei(details.forSale)} eth For\r\n              Sale\r\n            </div>\r\n            <form action=\"\" onSubmit={putUpForSale}>\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"sell_field\">\r\n                    Put Up Some Ether For Sale.\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"sell_field\"\r\n                    placeholder=\"Enter Amount For Sale...\"\r\n                    className=\"form-control\"\r\n                    required\r\n                    onChange={({ target }) => setSale(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"sell_field\">Amount In Wei.</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"sell_field\"\r\n                    placeholder={!forSale ? \"0\" : Web3.utils.toWei(forSale)}\r\n                    className=\"form-control\"\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"form-group row\">\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"\">Min. Purchase Of Eth At Once</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Min. Purchase At Once\"\r\n                    value={minPurchase}\r\n                    onChange={({ target }) => setMinPurchase(target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <label htmlFor=\"\">Amount In Naira/Eth </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"e.g. 3400000\"\r\n                    value={fiatValue}\r\n                    onChange={({ target }) => setFiat(target.value)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr />\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"desc\">Descripe Your Terms Of Sale:</label>\r\n                <textarea\r\n                  name=\"\"\r\n                  id=\"desc\"\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Type Message Here ...\"\r\n                  value={info}\r\n                  onChange={({ target }) => setInfo(target.value)}\r\n                ></textarea>\r\n              </div>\r\n              <hr />\r\n              <button className=\"btn btn-success btn-xs\">\r\n                Sell {forSale} Ether\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sell;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Offers.jsx",["134"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Web3 from \"web3\";\r\nimport { cleanAddress } from \"./../../../utils/cleanAddress\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst Offers = () => {\r\n  let { path } = useRouteMatch();\r\n\r\n  const [sales, setSales] = useState({ status: true, data: [] });\r\n  useEffect(() => {\r\n    const pull = async () => {\r\n      const apiResponse = await axios.get(\r\n        \"http://localhost:4444/sales/get-available-sales\",\r\n        { withCredentials: true }\r\n      );\r\n\r\n      setSales({ status: false, data: apiResponse.data[0] });\r\n    };\r\n    pull();\r\n  }, []);\r\n  return (\r\n    <div className=\"container table-responsive container_x\">\r\n      <div className=\"row\">\r\n        {/* justify-content-md-center */}\r\n        <div className=\"col-md-4\"></div>\r\n        <div className=\"col-md-8\">\r\n          <h5 className=\"text-center\">Available Ether For Sale</h5>\r\n          <table className=\"table table-hover table-striped table-sm\">\r\n            <thead className=\"thead-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Username</th>\r\n                <th scope=\"col\">Address</th>\r\n                <th scope=\"col\">Amount</th>\r\n                <th scope=\"col\">Min. Purchase</th>\r\n                <th scope=\"col\">Rate</th>\r\n                <th scope=\"col\">TimeStamp</th>\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sales.data.map((sale) => (\r\n                <tr key={sale.address}>\r\n                  <td>{sale.username}</td>\r\n                  <td>0x0...{cleanAddress(sale.address)}</td>\r\n                  <td>{Web3.utils.fromWei(sale.balance)}eth</td>\r\n                  <td>{Web3.utils.fromWei(sale.minpurchase)}eth</td>\r\n                  <td>{sale.rate}</td>\r\n                  <td>{sale.updated}</td>\r\n                  <td>\r\n                    <Link\r\n                      to={`/dashboard/sale-details/${sale.salesid}`}\r\n                      className=\"btn btn-secondary\"\r\n                    >\r\n                      View & Buy\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Offers;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Buy.jsx",["135"],"import React from \"react\";\r\nimport { ArrowRight, ArrowRightCircle } from \"react-feather\";\r\n\r\nconst Buy = () => {\r\n  return (\r\n    <div className=\"container container_x\">\r\n      <div className=\"row justify-content-md-center\">\r\n        <div className=\"col-md-8\">\r\n          <h5 className=\"text-center\">Active Ongoing Transactions</h5>\r\n          <hr />\r\n          <table className=\"table table-borderless table-hover table-striped custom-table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">BUYER</th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\">SELLER</th>\r\n                <th scope=\"col\">INIITAL</th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>0x0 ... 456466</td>\r\n                <td>\r\n                  <ArrowRightCircle size={13} />\r\n                </td>\r\n                <td>0x0 ... 456466</td>\r\n                <td>4 days AGO</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-primary btn-sm\">\r\n                    view\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>0x0 ... 456466</td>\r\n                <td>\r\n                  <ArrowRightCircle size={13} />\r\n                </td>\r\n                <td>0x0 ... 456466</td>\r\n                <td>4 days AGO</td>\r\n                <td>\r\n                  <button className=\"btn btn-outline-primary btn-sm\">\r\n                    view\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Buy;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\Transaction.jsx",["136"],"import React from \"react\";\r\nimport {\r\n  MessageSquare,\r\n  ArrowRightCircle,\r\n  ArrowDownCircle,\r\n} from \"react-feather\";\r\n\r\nconst Transaction = () => {\r\n  return (\r\n    <div className=\"container container_x\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <p className=\"text-center buyIcon\">0x...8d8df9d</p>\r\n          <p className=\"text-center buyIcon\">\r\n            <ArrowDownCircle size={29} />\r\n          </p>\r\n          <p className=\"text-center buyIcon\">0x...8d8df9d</p>\r\n          <p className=\"text-center buyIcon\">Locked Value : 0.034 eth</p>\r\n          <p className=\"text-center\">\r\n            <button className=\"btn btn-warning btn-sm\">Release Value!</button>\r\n          </p>\r\n          <div className=\"alert alert-secondary\">\r\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quibusdam\r\n            eius sed assumenda molestiae fuga quasi accusantium alias\r\n            voluptatem, repellendus illo cupiditate iste molestias distinctio\r\n            commodi ut? Magni in beatae sapiente.\r\n          </div>\r\n          <hr />\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <label htmlFor=\"\">\r\n            <MessageSquare size={15} /> Chat\r\n          </label>\r\n          <div className=\"chat_area\"></div>\r\n          <textarea\r\n            placeholder=\"Drop A Message!\"\r\n            className=\"form-control\"\r\n            name=\"\"\r\n            rows=\"4\"\r\n          ></textarea>\r\n          <hr />\r\n          <button className=\"btn btn-sm btn-primary\">Send Message</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","C:\\Users\\mayor\\Desktop\\cryp\\project2\\src\\components\\dashboard\\pages\\sales-details.jsx",[],{"ruleId":"137","severity":1,"message":"138","line":4,"column":8,"nodeType":"139","messageId":"140","endLine":4,"endColumn":11},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"137","severity":1,"message":"145","line":11,"column":7,"nodeType":"139","messageId":"140","endLine":11,"endColumn":20},{"ruleId":"137","severity":1,"message":"146","line":175,"column":9,"nodeType":"139","messageId":"140","endLine":175,"endColumn":24},{"ruleId":"137","severity":1,"message":"147","line":188,"column":9,"nodeType":"139","messageId":"140","endLine":188,"endColumn":17},{"ruleId":"137","severity":1,"message":"148","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"149","line":13,"column":8,"nodeType":"139","messageId":"140","endLine":13,"endColumn":22},{"ruleId":"137","severity":1,"message":"150","line":20,"column":19,"nodeType":"139","messageId":"140","endLine":20,"endColumn":29},{"ruleId":"137","severity":1,"message":"151","line":21,"column":19,"nodeType":"139","messageId":"140","endLine":21,"endColumn":26},{"ruleId":"137","severity":1,"message":"152","line":35,"column":9,"nodeType":"139","messageId":"140","endLine":35,"endColumn":24},{"ruleId":"137","severity":1,"message":"153","line":47,"column":9,"nodeType":"139","messageId":"140","endLine":47,"endColumn":22},{"ruleId":"137","severity":1,"message":"154","line":65,"column":9,"nodeType":"139","messageId":"140","endLine":65,"endColumn":21},{"ruleId":"137","severity":1,"message":"155","line":6,"column":16,"nodeType":"139","messageId":"140","endLine":6,"endColumn":22},{"ruleId":"137","severity":1,"message":"156","line":6,"column":24,"nodeType":"139","messageId":"140","endLine":6,"endColumn":29},{"ruleId":"137","severity":1,"message":"157","line":12,"column":3,"nodeType":"139","messageId":"140","endLine":12,"endColumn":7},{"ruleId":"158","severity":1,"message":"159","line":13,"column":19,"nodeType":"160","endLine":13,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":16,"column":19,"nodeType":"160","endLine":16,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":19,"column":19,"nodeType":"160","endLine":19,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":22,"column":19,"nodeType":"160","endLine":22,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":51,"column":11,"nodeType":"160","endLine":51,"endColumn":23},{"ruleId":"161","severity":1,"message":"162","line":76,"column":6,"nodeType":"163","endLine":76,"endColumn":15,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"162","line":80,"column":6,"nodeType":"163","endLine":80,"endColumn":15,"suggestions":"165"},{"ruleId":"137","severity":1,"message":"166","line":8,"column":9,"nodeType":"139","messageId":"140","endLine":8,"endColumn":13},{"ruleId":"137","severity":1,"message":"167","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":20},{"ruleId":"137","severity":1,"message":"168","line":4,"column":3,"nodeType":"139","messageId":"140","endLine":4,"endColumn":19},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["169"],"no-negated-in-lhs",["170"],"'activeAccount' is defined but never used.","'payWithMetaMask' is assigned a value but never used.","'purchase' is assigned a value but never used.","'useState' is defined but never used.","'ProtectedRoute' is defined but never used.","'setDeposit' is assigned a value but never used.","'setSale' is assigned a value but never used.","'connectMetaMask' is assigned a value but never used.","'submitDeposit' is assigned a value but never used.","'putUpForSale' is assigned a value but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'web3' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'exchangeContract.methods'. Either include it or remove the dependency array.","ArrayExpression",["171"],["172"],"'path' is assigned a value but never used.","'ArrowRight' is defined but never used.","'ArrowRightCircle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"173","fix":"175"},"Update the dependencies array to be: [address, exchangeContract.methods]",{"range":"176","text":"177"},{"range":"178","text":"177"},[2354,2363],"[address, exchangeContract.methods]",[2525,2534]]